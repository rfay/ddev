#ddev-generated
# If you remove the ddev-generated line above you
# are responsible for maintaining this file. DDEV will not then
# update it, for example if you add `additional_hostnames`, etc.

{{$top := .}}
http:
  routers:
    {{ $appname := .App.Name}}{{ range $s := .RoutingTable }}
    {{- if not $s.HTTPS -}}
    {{ $routerName := print $appname "-" $s.Service.InternalServiceName "-" $s.Service.InternalServicePort "-http" }}
    {{ $routerName }}:
      entrypoints:
        - http-{{$s.ExternalPort}}
      {{- if not $.UseLetsEncrypt -}}{{/* Let's Encrypt only works with Host(), but we need HostRegexp() for wildcards*/}}
      rule: HostRegexp({{ range $i, $h := $s.ExternalHostnames }}{{if $i}}, {{end}}`{{$h}}`{{end}})
      {{ else }}
      rule: Host({{ range $i, $h := $s.ExternalHostnames }}{{if $i}}, {{end}}`{{$h}}`{{end}})
      {{ end }}
      service: "{{$appname}}-{{$s.Service.InternalServiceName}}-{{$s.Service.InternalServicePort}}"
      middlewares:
      {{- $middlewares := index $top.Extensions.MiddlewareAssignments $routerName }}
      {{- if $middlewares }}
        {{- range $middlewares }}
        - {{ . }}
        {{- end }}
      {{- else }} []
      {{- end }}
      tls: false
    {{ end }}{{ end }}
    {{ range $s := .RoutingTable }}
      {{- if $s.HTTPS -}}
    {{ $routerName := print $appname "-" $s.Service.InternalServiceName "-" $s.Service.InternalServicePort "-https" }}
    {{ $routerName }}:
      entrypoints:
        - http-{{$s.ExternalPort}}
      {{- if not $.UseLetsEncrypt -}}{{/* Let's Encrypt only works with Host(), but we need HostRegexp() for wildcards*/}}
      rule: HostRegexp({{ range $i, $h := $s.ExternalHostnames }}{{ if $i }}, {{ end }}`{{$h}}`{{ end }})
      {{ else }}
      rule: Host({{ range $i, $h := $s.ExternalHostnames }}{{- if $i -}}, {{- end -}}`{{$h}}`{{end}})
      {{ end }}
      service: "{{$appname}}-{{$s.Service.InternalServiceName}}-{{$s.Service.InternalServicePort}}"
      {{ if not $.UseLetsEncrypt }}
      middlewares:
      {{- $middlewares := index $top.Extensions.MiddlewareAssignments $routerName }}
      {{- if $middlewares }}
        {{- range $middlewares }}
        - {{ . }}
        {{- end }}
      {{- else }} []
      {{- end }}
      tls: true
      {{ else }}
      tls:
        certResolver: acme-tlsChallenge
      {{ end }}{{ end }}
    {{ end }}

  middlewares:
    {{- range .Extensions.MiddlewareDefinitions}}
    {{.Name}}:
      {{.Body -}}
    {{- end}}

  services:
    {{$appname := .App.Name}}
    {{- $outputServices := dict -}}
    {{ range $s := .RoutingTable }}
      {{- if not (index $outputServices (print $s.Service.ServiceName)) -}}
        {{- $outputServices = merge $outputServices (dict (print $s.Service.ServiceName) true) -}}
    {{$appname}}-{{ $s.Service.ServiceName }}:
      loadbalancer:
        servers:
          - url: http://ddev-{{$appname}}-{{$s.Service.InternalServiceName}}:{{$s.Service.InternalServicePort}}
        {{ end }}
    {{ end }}

{{/* let's encrypt doesn't work if there's already a provided cert, so omit there */}}
{{- if not .UseLetsEncrypt -}}
tls:
  certificates:
    - certFile: {{ .TargetCertsPath }}/{{ .App.Name }}.crt
      keyFile: {{ .TargetCertsPath }}/{{ .App.Name }}.key
{{- end -}}
